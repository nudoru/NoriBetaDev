/** * * Checkerboard.as 	 Charles S.Davis 	April 2010 * * Draw checkerboard pattern as bitmap * * * Licensed under the MIT License *  * Copyright (c) 2010 Charles S.Davis *  * Permission is hereby granted, free of charge, to any person obtaining a copy of * this software and associated documentation files (the "Software"), to deal in * the Software without restriction, including without limitation the rights to * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of * the Software, and to permit persons to whom the Software is furnished to do so, * subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in all * copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. *  * http://www.opensource.org/licenses/mit-license.php *     */package com.nudoru.visual.drawing{	import flash.display.Sprite;	import flash.geom.Rectangle;	import flash.display.BitmapData;		public class Checkerboard extends Sprite	{		public var cellSize:uint;		public var color_1:uint;		public var color_2:uint;		public var boardWidth:uint;		public var boardHeight:uint;				private var pattern:BitmapData;				/**		 *	PARAMS:		@param		cellSize		uint		width/height of base cell		 *				@param 		color_1			uint		1st color of pattern		 *				@param 		color_2			uint		2nd color of pattern		 *				@param 		boardWidth 		uint		width of area to be filled		 *				@param		boardHeight		uint      	height of area to be filled		 *		 *		 *	USAGE:		import com.dtk.Checkerboard;  		 *		 *				// new instance of Checkerboard Class		 *				var cb:Checkerboard = new Checkerboard( cellSize, color_1, color_2, boardWidth, boardHeight );		 *				cb.x = x;		 *				cb.y = y;		 *				cb.alpha = n;  // optional		 *				addChild( cb );		 */		public function Checkerboard ( cellSize:uint, color_1:uint, color_2:uint, boardWidth:uint, boardHeight:uint ):void		{			this.cellSize    = cellSize;			this.color_1     = color_1;			this.color_2     = color_2;			this.boardWidth  = boardWidth;			this.boardHeight = boardHeight;						drawPattern( );		}				/**		 *	draw bitmap pattern of 4 x 4 cells & fill area with pattern		 *		 */		private function drawPattern( ):void		{			// draw 4 x 4 bitmap cells of alternating colors			pattern = new BitmapData( cellSize * 2, cellSize * 2, false );			pattern.fillRect( new Rectangle( 0, 0, cellSize, cellSize ), color_1 );			pattern.fillRect( new Rectangle( cellSize, 0, cellSize, cellSize ), color_2 );			pattern.fillRect( new Rectangle( 0, cellSize, cellSize, cellSize ), color_2 );			pattern.fillRect( new Rectangle( cellSize, cellSize, cellSize, cellSize ), color_1 );						// fill entire area with of bitmap pattern			var board:Sprite = new Sprite( );			board.graphics.beginBitmapFill( pattern );			board.graphics.drawRect( 0, 0, boardWidth, boardHeight );			board.graphics.endFill();			addChild( board );		}	}}